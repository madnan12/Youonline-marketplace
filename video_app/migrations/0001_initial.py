# Generated by Django 3.2.6 on 2021-12-29 23:26

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('youonline_social_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='VideoCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'VideoCategory',
            },
        ),
        migrations.CreateModel(
            name='VideoChannel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='YoutubePicture')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='YoutubeCover')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='channel_profile', to='youonline_social_app.profile')),
            ],
            options={
                'db_table': 'VideoChannel',
            },
        ),
        migrations.CreateModel(
            name='VideoPlaylist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='PlayListsBanner/%Y/%m')),
                ('description', models.TextField(blank=True, null=True)),
                ('privacy', models.CharField(blank=True, choices=[('Public', 'Public'), ('OnlyMe', 'OnlyMe'), ('Friends', 'Friends')], default='Public', max_length=32, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist_channel', to='video_app.videochannel')),
            ],
            options={
                'db_table': 'VideoPlaylist',
                'unique_together': {('channel', 'name')},
            },
        ),
        migrations.CreateModel(
            name='VideoWatched',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videowatched_post', to='youonline_social_app.post')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videowatched_profile', to='youonline_social_app.profile')),
            ],
            options={
                'db_table': 'VideoWatched',
            },
        ),
        migrations.CreateModel(
            name='VideoSubCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=32)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='video_app.videocategory')),
            ],
            options={
                'db_table': 'VideoSubCategory',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('privacy', models.CharField(blank=True, choices=[('Public', 'Public'), ('OnlyMe', 'OnlyMe'), ('Friends', 'Friends')], default='Public', max_length=32, null=True)),
                ('title', models.CharField(blank=True, max_length=128, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='videos_module/%Y/%m')),
                ('vid_thumbnail', models.FileField(blank=True, null=True, upload_to='videos_module/%Y/%m')),
                ('youtube_link', models.CharField(blank=True, max_length=128, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_hidden', models.BooleanField(default=False)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='video_app.videocategory')),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_channel', to='video_app.videochannel')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videomodule_post', to='youonline_social_app.post')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_profile', to='youonline_social_app.profile')),
                ('sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='video_app.videosubcategory')),
            ],
            options={
                'db_table': 'Video',
            },
        ),
        migrations.CreateModel(
            name='VideoWatchLater',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videowatchlater_post', to='youonline_social_app.post')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videowatchlater_profile', to='youonline_social_app.profile')),
            ],
            options={
                'db_table': 'VideoWatchLater',
                'unique_together': {('post', 'profile')},
            },
        ),
        migrations.CreateModel(
            name='VideoPlaylistPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('playlist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postvideoplaylist_playlist', to='video_app.videoplaylist')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postvideoplaylist_post', to='youonline_social_app.post')),
            ],
            options={
                'db_table': 'VideoPlaylistPost',
                'unique_together': {('playlist', 'post')},
            },
        ),
    ]
